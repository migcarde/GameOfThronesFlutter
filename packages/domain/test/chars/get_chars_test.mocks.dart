// Mocks generated by Mockito 5.0.3 from annotations
// in domain/test/chars/get_chars_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:domain/operations/chars/char_business.dart' as _i6;
import 'package:domain/operations/chars/char_failure.dart' as _i5;
import 'package:domain/operations/chars/char_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [CharRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharRepository extends _i1.Mock implements _i3.CharRepository {
  MockCharRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.CharFailure, List<_i6.CharBusiness>>> getChars(
          int? type) =>
      (super.noSuchMethod(Invocation.method(#getChars, [type]),
              returnValue: Future.value(
                  _FakeEither<_i5.CharFailure, List<_i6.CharBusiness>>()))
          as _i4.Future<_i2.Either<_i5.CharFailure, List<_i6.CharBusiness>>>);
}
